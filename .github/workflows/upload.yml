name: Upload
# Only trigger, when the build workflow succeeded
on:
  workflow_run:
    workflows: ["Template"]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Linux itch.io Upload
    outputs:
      status: ${{ steps.early.outputs.status }}
    steps:
      - name: Pause until all workflows are completed
        uses: willgarcia/workflow-wait-action@0.1.0
        with:
          initial_delay: 70
          interval: 30
          timeout: 3000
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.9'
          architecture: 'x64'

      - name: Update script
        id: early
        run: |
          python -m pip install --upgrade pip
          python -m pip install requests
          mv .github/workflows/api.py .
          python api.py
          [ ! -f archive.tar.xz ] && echo "status='skip'" >> $GITHUB_OUTPUT
          [ -f archive.tar.xz ] && echo "status='deploy'" >> $GITHUB_OUTPUT 


  deploy:
    runs-on: ubuntu-22.04
    name: Deploy
    needs: build-linux
    if: needs.build-linux.outputs.status == 'deploy'

      - name: Download artifact from build
        uses: bettermarks/action-artifact-download@0.3.0
        with:
          repo: LinuxUserGD/gdscript-transpiler-bin
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: Linux Build
          rename: linux.zip
          wait_seconds: 20

      - name: Download artifact from build
        uses: bettermarks/action-artifact-download@0.3.0
        with:
          repo: LinuxUserGD/gdscript-transpiler-bin
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: MacOS Build
          rename: macOS.zip
          wait_seconds: 20

      - name: Download artifact from build
        uses: bettermarks/action-artifact-download@0.3.0
        with:
          repo: LinuxUserGD/gdscript-transpiler-bin
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: Windows Build
          rename: windows.zip
          wait_seconds: 20

      - name: Extracting linux.zip
        shell: bash
        run: |
          rm -rf gds
          wget https://gist.githubusercontent.com/LinuxUserGD/73d8e030a44eb7f91bdeaea96a321f6d/raw/sources.list
          sudo rm -f /etc/apt/sources.list.d/* && sudo cp -f sources.list /etc/apt/sources.list
          sudo apt-get update && sudo apt-get install unzip
          unzip linux.zip
          rm linux.zip

      - name: Uploading linux binary
        uses: yeslayla/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: linux
          ITCH_GAME: gdscript-transpiler-bin
          ITCH_USER: linuxusergd
          PACKAGE: gds

      - name: Extracting macOS.zip
        shell: bash
        run: |
          rm gds
          unzip macOS.zip
          rm macOS.zip

      - name: Uploading macOS binary
        uses: yeslayla/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: mac
          ITCH_GAME: gdscript-transpiler-bin
          ITCH_USER: linuxusergd
          PACKAGE: gds

      - name: Extracting windows.zip
        shell: bash
        run: |
          rm gds
          unzip windows.zip
          rm windows.zip

      - name: Uploading windows binary
        uses: yeslayla/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: windows
          ITCH_GAME: gdscript-transpiler-bin
          ITCH_USER: linuxusergd
          PACKAGE: gds.exe