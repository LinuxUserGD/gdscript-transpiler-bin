name: üèÅ Windows Build
# Only trigger, when the build workflow succeeded
on:
  workflow_run:
    workflows: ["Template"]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-windows:
    runs-on: windows-2022
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: ${{ matrix.name }}
    outputs:
      status: ${{ steps.early.outputs.status }}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.9'
          architecture: 'x64'

      - name: Update script
        id: early
        run: |
          python -m pip install --upgrade pip
          python -m pip install requests
          mv .github/workflows/api.py .
          python api.py
          if (!(Test-Path "D:\a\gdscript-transpiler-bin\gdscript-transpiler-bin\archive.tar.xz")) { echo "status='skip'" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append }
          if (Test-Path "D:\a\gdscript-transpiler-bin\gdscript-transpiler-bin\archive.tar.xz") { echo "status='deploy'" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append }   

  deploy:
    runs-on: windows-2022
    name: Deploy
    needs: build-windows
    if: needs.build-windows.outputs.status == 'deploy'

    steps:
      - name: Install Dependencies
        run: |
          &'C:\Program Files\7-Zip\7z.exe' x archive.tar.xz -aoa
          rm archive.tar.xz
          &'C:\Program Files\7-Zip\7z.exe' x archive.tar -aoa
          rm archive.tar
          pip install -r requirements.txt
          pip install git+https://github.com/Nuitka/Nuitka.git
          pip install git+https://github.com/rocky/python-xdis.git
          pip install git+https://github.com/rocky/x-python.git
          python -m pip install -e .
      
      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Build Executable
        run: |
          cd D:\a\gdscript-transpiler-bin\gdscript-transpiler-bin\bin\
          python -m gds format=gds.gd
          python -m nuitka gds.py --onefile --lto=yes --static-libpython=no --clang --assume-yes-for-downloads --include-package-data=blib2to3 --include-package-data=ziglang

      - name: Upload main.dist
        uses: actions/upload-artifact@v3
        with:
          name: Windows Build
          path: D:\a\gdscript-transpiler-bin\gdscript-transpiler-bin\bin\gds.exe
